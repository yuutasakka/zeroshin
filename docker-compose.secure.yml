version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.secure
      args:
        BUILD_DATE: ${BUILD_DATE:-2024-01-01}
        VCS_REF: ${VCS_REF:-main}
        VERSION: ${VERSION:-1.0.0}
    image: moneyticket-secure:latest
    container_name: moneyticket-app
    restart: unless-stopped
    
    # セキュリティ設定
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default
      - seccomp:seccomp-profile.json
    
    # ケーパビリティの削除
    cap_drop:
      - ALL
    
    # 必要最小限のケーパビリティのみ追加
    cap_add:
      - NET_BIND_SERVICE
    
    # 読み取り専用ファイルシステム
    read_only: true
    
    # 一時ファイル用のマウント
    tmpfs:
      - /tmp:noexec,nosuid,size=100M
      - /app/tmp:noexec,nosuid,size=50M
    
    # ボリューム（最小限）
    volumes:
      - ./logs:/app/logs:rw
      - ./keys:/app/keys:ro
    
    # 環境変数
    environment:
      NODE_ENV: production
      PORT: 8080
      LOG_LEVEL: info
    
    # シークレット
    secrets:
      - jwt_secret
      - db_password
      - api_keys
    
    # ネットワーク
    networks:
      - app-network
      - db-network
    
    # ポート
    ports:
      - "127.0.0.1:8080:8080"
    
    # リソース制限
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    
    # ヘルスチェック
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8080/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1); })"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s
    
    # ユーザー
    user: "1001:1001"
    
    # 依存関係
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # PostgreSQLデータベース
  postgres:
    image: postgres:16-alpine
    container_name: moneyticket-db
    restart: unless-stopped
    
    # セキュリティ設定
    security_opt:
      - no-new-privileges:true
    
    cap_drop:
      - ALL
    
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - FOWNER
      - SETGID
      - SETUID
    
    # 環境変数
    environment:
      POSTGRES_DB: moneyticket
      POSTGRES_USER: moneyticket_user
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
      PGDATA: /var/lib/postgresql/data/pgdata
    
    # シークレット
    secrets:
      - db_password
    
    # ボリューム
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./sql/init:/docker-entrypoint-initdb.d:ro
    
    # ネットワーク
    networks:
      - db-network
    
    # ヘルスチェック
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U moneyticket_user -d moneyticket"]
      interval: 10s
      timeout: 5s
      retries: 5
    
    # ポート（内部のみ）
    expose:
      - "5432"

  # Redisキャッシュ
  redis:
    image: redis:7-alpine
    container_name: moneyticket-redis
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf
    
    # セキュリティ設定
    security_opt:
      - no-new-privileges:true
    
    cap_drop:
      - ALL
    
    cap_add:
      - SETUID
      - SETGID
    
    # 読み取り専用
    read_only: true
    
    # 設定ファイル
    volumes:
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf:ro
      - redis-data:/data:rw
    
    # ネットワーク
    networks:
      - app-network
    
    # ヘルスチェック
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    
    # ポート（内部のみ）
    expose:
      - "6379"

  # ログ集約（Fluentd）
  fluentd:
    image: fluent/fluentd:v1.16-1
    container_name: moneyticket-fluentd
    restart: unless-stopped
    
    # セキュリティ設定
    security_opt:
      - no-new-privileges:true
    
    cap_drop:
      - ALL
    
    # 設定とプラグイン
    volumes:
      - ./config/fluent.conf:/fluentd/etc/fluent.conf:ro
      - ./logs:/var/log/app:ro
      - fluentd-data:/fluentd/log:rw
    
    # ネットワーク
    networks:
      - app-network
    
    # 環境変数
    environment:
      FLUENTD_CONF: fluent.conf

  # WAF (Web Application Firewall)
  waf:
    image: owasp/modsecurity-crs:nginx-alpine
    container_name: moneyticket-waf
    restart: unless-stopped
    
    # セキュリティ設定
    security_opt:
      - no-new-privileges:true
    
    cap_drop:
      - ALL
    
    cap_add:
      - CHOWN
      - NET_BIND_SERVICE
      - SETGID
      - SETUID
    
    # 設定
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/modsecurity.conf:/etc/nginx/modsecurity.d/modsecurity.conf:ro
    
    # ポート
    ports:
      - "443:443"
      - "80:80"
    
    # ネットワーク
    networks:
      - app-network
      - external-network
    
    # 依存関係
    depends_on:
      - app

# ネットワーク定義
networks:
  app-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br_app
    ipam:
      config:
        - subnet: 172.20.0.0/24
    internal: true

  db-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br_db
    ipam:
      config:
        - subnet: 172.21.0.0/24
    internal: true

  external-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br_ext

# ボリューム定義
volumes:
  postgres-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /secure/data/postgres

  redis-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /secure/data/redis

  fluentd-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /secure/data/fluentd

# シークレット定義
secrets:
  jwt_secret:
    file: ./secrets/jwt_secret.txt
  db_password:
    file: ./secrets/db_password.txt
  api_keys:
    file: ./secrets/api_keys.json